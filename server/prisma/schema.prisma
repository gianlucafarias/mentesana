// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum RoleType {
  USER
  EDITOR
  ADMIN
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  name          String
  birthDate     DateTime?  // Fecha de nacimiento
  locality      String?    // Localidad
  province      String?    // Provincia
  role          RoleType   @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  posts         Post[]
  events        Event[]
  dailyEntries  DailyEntry[]
  notifications Notification[]
}

model Post {
  id        String    @id @default(uuid())
  title     String
  content   String
  image     String?   // URL o ruta 
  category  String?   // Categoría del post
  published Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
}

model Event {
  id          String    @id @default(uuid())
  title       String
  description String
  date        DateTime
  location    String?
  image       String?   // URL o ruta
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
}

model DailyEntry {
  id        String    @id @default(uuid())
  mood      Int       
  notes     String?
  aiMessage String?   // Mensaje motivacional generado por IA
  date      DateTime  @default(now())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  userId    String
}

model Notification {
  id          String    @id @default(uuid())
  type        String    // Tipo de notificación (ej: "event", "post", "system")
  title       String
  message     String
  read        Boolean   @default(false)
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  link        String?   // URL opcional relacionada con la notificación
} 